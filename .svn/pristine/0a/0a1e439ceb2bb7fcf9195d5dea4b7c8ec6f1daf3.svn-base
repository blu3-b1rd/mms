package com.mms.app;

import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.Toast;

import com.mms.MMSActivity;
import com.mms.MMSApplication;
import com.mms.MMSPreferences;
import com.mms.model.MMSList;
import com.mms.model.MMSResponse;
import com.mms.request.GetArtistGallery;
import com.mms.request.MMSAsyncRequest;
import com.mms.request.MMSAsyncRequest.OnMMSRequestFinishedListener;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;

public class GallerySectionActivity extends ActionBarActivity
	implements OnMMSRequestFinishedListener {
	
	private MMSList mGallery;
	private LinearLayout galleryLayout;
	
	private DisplayImageOptions options;
	private ImageLoader imageLoader;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		this.setContentView(R.layout.activity_gallery);
		String cookie = MMSPreferences.loadString(MMSPreferences.COOKIE, null);
		new MMSAsyncRequest(this).execute(new GetArtistGallery(cookie));
	}

	@Override
	public void onMMSRequestFinished(MMSResponse response) {
		this.findViewById(R.id.progress).setVisibility(View.GONE);
		try {
			switch(response.getStatus()){
			case MMSActivity.MMS_SUCCESS:
				this.onSuccessfulResponse(response);
				break;
			case MMSActivity.MMS_WRONG_COOKIE:
				this.onWrongCookie();
				break;
			default:
				this.onErrorResponse(response);
				break;
			}
		} catch(Exception e) {
			e.printStackTrace();
			this.onRequestFailed();
		}
	}
	
	protected void onSuccessfulResponse(MMSResponse response){
		MMSList content = (MMSList) response.getContent();
		if(content.isEmpty()){
			this.findViewById(R.id.lbl_empty).setVisibility(View.VISIBLE);
		} else {
			this.findViewById(R.id.lbl_empty).setVisibility(View.GONE);
			this.displayGallery(content);
		}
	}
	
	private void displayGallery(MMSList gallery){
		/*
		this.findViewById(R.id.scroll_gallery).setVisibility(View.VISIBLE);
		this.galleryLayout = (LinearLayout) this.findViewById(R.id.layout_gallery);
		this.mGallery = gallery;
		
		this.imageLoader = ImageLoader.getInstance();
		this.options = new DisplayImageOptions.Builder()
			.displayer(new FadeInBitmapDisplayer(800))
			.showStubImage(R.drawable.default_album_art)
			.showImageForEmptyUri(R.drawable.default_album_art)
			.showImageOnFail(R.drawable.default_album_art)
			.cacheInMemory()
			.build();
		
		DisplayMetrics metrics = this.getResources().getDisplayMetrics();
		int containerSize = (int) TypedValue.applyDimension(
				TypedValue.COMPLEX_UNIT_DIP, 150, metrics);
		int imageSize = (int) TypedValue.applyDimension(
				TypedValue.COMPLEX_UNIT_DIP, 120, metrics);
		//int imagePadding = (int) TypedValue.applyDimension(
			//	TypedValue.COMPLEX_UNIT_DIP, 10, metrics);
		for(int i = 0 ; i < this.mGallery.size() ; i++){
			LinearLayout container = new LinearLayout(this.getApplicationContext());
			container.setLayoutParams(new LayoutParams(containerSize, containerSize));
			container.setGravity(Gravity.CENTER);
			
			ImageView image = new ImageView(this.getApplicationContext());
			image.setLayoutParams(new LayoutParams(imageSize, imageSize));
			//image.setPadding(imagePadding, imagePadding, imagePadding, imagePadding);
			image.setScaleType(ScaleType.CENTER_CROP);
			
			MMSGalleryItem item = (MMSGalleryItem) this.mGallery.get(i);
			this.imageLoader.displayImage(MMSConfig.MMS_BASE_CONTENT_URL + item.getUrl(),
					image, this.options);
			this.galleryLayout.addView(image, i);
		}
		*/
	}
	
	protected void onRequestFailed(){
		Toast.makeText(this, "Connection Failed",
				Toast.LENGTH_SHORT).show();
	}
	
	protected void onWrongCookie(){
		Toast.makeText(this, "Login again. Wrong Cookie",
				Toast.LENGTH_SHORT).show();
		((MMSApplication) this.getApplication()).logout(this);
	}
	
	protected void onErrorResponse(MMSResponse response) {
		Toast.makeText(this, response.getMessage(),
				Toast.LENGTH_SHORT).show();
	}
	
}
