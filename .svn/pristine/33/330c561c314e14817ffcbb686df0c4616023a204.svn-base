package com.mms.sample.sections;

import java.util.Locale;

import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentTransaction;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.mms.MMSApplication;
import com.mms.sample.R;
import com.mms.sample.model.MMSResponse;
import com.mms.sample.model.MMSUser;
import com.mms.sample.request.GetUserRequest;
import com.mms.sample.request.MMSAsyncRequest;
import com.mms.sample.request.MMSAsyncRequest.OnMMSRequestFinishedListener;
import com.mms.sample.util.LoginType;

public class MeActivity extends FragmentActivity implements OnMMSRequestFinishedListener {

	private static final int CURRENT_RATING = 4;
	private static final String TAG_RATING_DETAILS_DIALOG = "rating_details_dialog";

	private MMSApplication mmsApplication;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		this.setContentView(R.layout.activity_me);
		this.mmsApplication = (MMSApplication) this.getApplication();
		if(this.mmsApplication.getUser() != null){
			this.setProfileFragment();
		} else {
			this.startUserRequest();
		}
	}

	@Override
	public void onMMSRequestFinished(MMSResponse response) {
		this.findViewById(R.id.progress).setVisibility(View.GONE);
		if(response == null){
			Toast.makeText(this, "Connection Failed", Toast.LENGTH_SHORT).show();
		} else if(response.getStatus() == 200) {
			this.mmsApplication.setUser((MMSUser) response.getContent());
			this.setProfileFragment();
		} else {
			Toast.makeText(this, response.getMessage(), Toast.LENGTH_SHORT).show();
		}
	}
	
	private void startUserRequest(){
		LoginType loginType = this.mmsApplication.loadLoginType();
		String cookie = this.mmsApplication.loadCookie();
		new MMSAsyncRequest(this).execute(new GetUserRequest(cookie, loginType));
	}
	
	private void setProfileFragment(){
		this.findViewById(R.id.progress).setVisibility(View.GONE);
		this.getSupportFragmentManager().beginTransaction()
			.replace(R.id.profile_content, new MeFragment())
			.commit();
	}
	
	public static class MeFragment extends Fragment {
		
		private ListView ratingList;
		
		private TextView welcomeMessage;
		private EditText nameField;
		private EditText usernameField;
		private EditText emailField;
		private EditText genderField;
		private EditText birthdayField;
		
		private MMSUser user;
		
		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			this.user = ((MMSApplication) this.getActivity().getApplication()).getUser();
			if(user.getGender().toLowerCase(Locale.ENGLISH).equals("male")){
				return inflater.inflate(R.layout.fragment_me_guy, container, false);
			} else {
				return inflater.inflate(R.layout.fragment_me_girl, container, false);
			}
		}
		
		@Override
		public void onViewCreated(View view, Bundle savedInstanceState) {
			this.welcomeMessage = (TextView) view.findViewById(R.id.welcome_message);
			this.nameField = (EditText) view.findViewById(R.id.name_field);
			this.usernameField = (EditText) view.findViewById(R.id.username_field);
			this.emailField = (EditText) view.findViewById(R.id.email_field);
			this.genderField = (EditText) view.findViewById(R.id.gender_field);
			this.birthdayField = (EditText) view.findViewById(R.id.birthday_field);
			
			this.ratingList = (ListView) view.findViewById(R.id.rating_level);
			this.ratingList.setAdapter(new RatingLevelAdapter(this.getActivity()));
			this.ratingList.setOnItemClickListener(new OnItemClickListener() {
				@Override
				public void onItemClick(AdapterView<?> adapter, View view, int position,
						long viewId) {
					onRatingClicked(position);
				}
			});
			this.setProfileInfo();
		}
		
		private void setProfileInfo(){
			this.welcomeMessage.setText("Hi there, " + this.user.getAccount().getUserName() + "!");
			this.nameField.setHint(this.user.getName());
			this.usernameField.setHint(this.user.getAccount().getUserName());
			this.emailField.setHint(this.user.getAccount().getEmail());
			this.genderField.setHint(this.user.getGender());
			String birthday = this.user.getBirthday();
			if(birthday == null){
				this.birthdayField.setVisibility(View.GONE);
			} else {
				this.birthdayField.setHint(birthday);
			}
		}
		
		private void onRatingClicked(int position){
			FragmentTransaction transaction = this.getFragmentManager().beginTransaction();
	    	Fragment prevDialog = this.getFragmentManager().findFragmentByTag(TAG_RATING_DETAILS_DIALOG);
	    
	    	if(prevDialog != null){
	    		transaction.remove(prevDialog);
	    	}
	    	transaction.commit();
	    	
			DialogFragment dialog = new RatingDetailsFragment();
			Bundle args = new Bundle();
			args.putInt("rating_selected", position);
			dialog.setArguments(args);
			dialog.show(this.getFragmentManager(), TAG_RATING_DETAILS_DIALOG);
		}
	}

	private static final class RatingLevelAdapter extends
			ArrayAdapter<RatingLevel> {

		public RatingLevelAdapter(Context context) {
			super(context, 0);
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			convertView = LayoutInflater.from(this.getContext()).inflate(
					R.layout.list_item_rating_guy, parent, false);

			if (position < RatingLevel.getActualLevel(CURRENT_RATING)) {
				((ImageView) convertView.findViewById(R.id.rating_point))
						.setImageResource(R.drawable.ic_rating_blank);
			} else {
				((ImageView) convertView.findViewById(R.id.rating_point))
						.setImageResource(R.drawable.ic_rating_star);
			}

			if (position == RatingLevel.getActualLevel(CURRENT_RATING)) {
				convertView.findViewById(R.id.rating_title).setVisibility(
						View.VISIBLE);
				((TextView) convertView.findViewById(R.id.rating_title))
					.setText(RatingLevel.values()[RatingLevel.getActualLevel(CURRENT_RATING)].getLabel());
			}

			return convertView;
		}

		@Override
		public int getCount() {
			return RatingLevel.values().length;
		}

	}
	
	public static class RatingDetailsFragment extends DialogFragment {
		
		private int ratingSelected;
		
		@Override
		public void onCreate(Bundle savedInstanceState) {
			super.onCreate(savedInstanceState);
			this.setStyle(DialogFragment.STYLE_NO_TITLE, R.style.news_dialog);
			this.ratingSelected = this.getArguments().getInt("rating_selected");
		}
		
		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			return inflater.inflate(R.layout.fragment_rating_details, container, false);
		}
		
		@Override
		public void onViewCreated(View view, Bundle savedInstanceState) {
			super.onViewCreated(view, savedInstanceState);
			((TextView) view.findViewById(R.id.rating_title)).setText(
					RatingLevel.values()[ratingSelected].getLabel());
		}
		
	}
	
	private enum RatingLevel {
		FAN_FROM_HELL("Fan from hell"), OBSESIVE("Obsesive"), GROUPIE("Groupie"), FAN(
				"Fan"), NEWBIE("Newbie");

		private String label;

		private RatingLevel(String label) {
			this.label = label;
		}

		public String getLabel() {
			return this.label;
		}
		
		public static int getActualLevel(int level){
			return RatingLevel.values().length - CURRENT_RATING;
		}

	}

}
